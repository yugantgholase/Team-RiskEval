import React from "react";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import {
  Popover,
  PopoverTrigger,
  PopoverContent,
} from "@/components/ui/popover";

import { OctagonAlert, ChartNoAxesGantt, Eye, Activity } from "lucide-react";

const VulnerabilityCard = ({ data }) => {
  return (
    <Card className="p-4 relative">
      <CardHeader className="text-base font-semibold mb-4">
        {data.message}
      </CardHeader>
      <CardContent className="flex flex-row  justify-between gap-2 mb-4">
        <div className="flex flex-col gap-4">
          <div className="flex flex-row items-center">
            {data?.priority === "Critical" && (
              <OctagonAlert
                className="text-red-500 h-8 w-8 mr-4"
                style={{ color: "#af2525" }}
              />
            )}
            {data?.priority === "High" && (
              <OctagonAlert
                className="text-red-500 h-8 w-8 mr-4"
                style={{ color: "#f54a00" }}
              />
            )}
            {data?.priority === "Medium" && (
              <OctagonAlert
                className="text-yellow-500 h-8 w-8 mr-4"
                style={{ color: "#ffb900" }}
              />
            )}
            {data?.priority === "Low" && (
              <OctagonAlert
                className="text-green-500 h-8 w-8 mr-4"
                style={{ color: "#008641" }}
              />
            )}
            <div>
              <div className="text-sm">{data.priority}</div>
              <div className="text-xs text-muted-foreground">Severity</div>
            </div>
          </div>

          <div className="flex flex-row items-center">
            <Eye className="text-blue-500 h-8 w-8 mr-4" />
            <div>
              <div className="text-sm">{data.status}</div>
              <div className="text-xs text-muted-foreground">Status</div>
            </div>
          </div>
        </div>
        <div className="flex flex-col gap-4 mb-6">
          <div className="flex flex-row items-center">
            {data?.priority === "Critical" && (
              <Activity
                className="text-red-500 h-8 w-8 mr-4"
                style={{ color: "#af2525" }}
              />
            )}
            {data?.priority === "High" && (
              <Activity
                className="text-red-500 h-8 w-8 mr-4"
                style={{ color: "#f54a00" }}
              />
            )}
            {data?.priority === "Medium" && (
              <Activity
                className="text-yellow-500 h-8 w-8 mr-4"
                style={{ color: "#ffb900" }}
              />
            )}
            {data?.priority === "Low" && (
              <Activity
                className="text-green-500 h-8 w-8 mr-4"
                style={{ color: "#008641" }}
              />
            )}
            <div>
              <div className="text-sm">{data.cvss_score}</div>
              <div className="text-xs text-muted-foreground">CVSS</div>
            </div>
          </div>

          <div className="flex flex-row items-center">
            <ChartNoAxesGantt className=" h-8 w-8 mr-4" />
            <div>
              <div className="text-sm">{data.line}</div>
              <div className="text-xs text-muted-foreground">Line</div>
            </div>
          </div>
        </div>
      </CardContent>
      <div className="absolute bottom-2 right-2 pt-6">
        <Popover>
          <PopoverTrigger asChild>
            <Button size="sm" variant="outline" className="cursor-pointer">
              More Details
            </Button>
          </PopoverTrigger>
          <PopoverContent className="w-160">
            <div className="text-sm font-semibold mb-2">Reason</div>
            <p className="text-sm mb-4">{data.reason}</p>
            <div className="text-sm font-semibold mb-2">Remediation</div>
            <p className="text-sm">{data.remediation}</p>
          </PopoverContent>
        </Popover>
      </div>
    </Card>
  );
};

export default VulnerabilityCard;
